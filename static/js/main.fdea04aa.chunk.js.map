{"version":3,"sources":["assets/logo.svg","assets/man-laptop-v1.svg","components/Navbar.jsx","components/Header.jsx","components/Preloader.jsx","components/Users.jsx","redux/actions.js","components/UsersContainer.js","components/Acquaintion.jsx","components/Footer.jsx","components/Home.jsx","App.js","serviceWorker.js","redux/usersReducer.js","redux/store.js","index.js"],"names":["module","exports","Navbar","props","className","src","require","alt","exact","to","activeClassName","Header","href","Preloader","class","RenderUser","isFetching","name","email","phone","position","photo","Users","users","map","user","onClick","updateNextUrl","ADD_USER","UPDATE_URL","USER_IS_FETCHING","UsersContainer","componentDidMount","userFetching","axios","get","url","then","response","data","addUser","id","position_id","registration_timestamp","links","next_url","this","React","Component","connect","state","newUser","type","Acquaintion","Footer","Home","App","path","render","Boolean","window","location","hostname","match","initialState","usersReducer","action","reducers","combineReducers","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fdea04aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.146e2926.svg\";","module.exports = __webpack_public_path__ + \"static/media/man-laptop-v1.3cdf7897.svg\";","import React from 'react'\nimport '../style/main.scss';\nimport { NavLink } from 'react-router-dom';\n\nconst Navbar = props => {\n    return (\n        <div className='navbar'>\n            <img src={require('../assets/logo.svg')} alt='logo'></img>\n            <ul>\n                <NavLink exact={true} to='/' activeClassName='activeLink'>About me</NavLink>\n                <NavLink to='/relationships' activeClassName='activeLink'>Relationships</NavLink>\n                <NavLink to='/requirments' activeClassName='activeLink'>Requirments</NavLink>\n                <NavLink to='/users' activeClassName='activeLink'>Users</NavLink>\n                <NavLink to='/signUp' activeClassName='activeLink'>Sign Up</NavLink>\n            </ul>\n        </div>\n    )\n}\n\nexport default Navbar","import React from 'react'\nimport '../style/main.scss';\n\nconst Header = props => {\n    return (\n        <div className='header'>\n            <div className='container'>\n                <div className='textBlock'>\n                    <h1>Test assignment for Frontend Developer position</h1>\n                    <span>\n                        We kindly remind you that your test assignment should be submitted\n                        as a link to github/bitbucket repository. \n                    </span>\n                    {/* next span will not be shown on small screens */}\n                    <span>\n                        Please be patient, we consider and respond to every application that meets \n                        minimum requirements. We look forward to your submission. Good luck! \n                        The photo has to scale in the banner area on the different screens\n                    </span>\n                </div>\n                <a className='button' href='/signUpNow'>Sign up now</a>\n            </div>\n        </div>\n    )\n}\nexport default Header","import React from 'react'\nimport '../style/main.scss';\n\nconst Preloader = () => {\n    return (\n        <div>\n            <div class=\"lds-ripple\"><div></div><div></div></div>\n        </div>\n    )\n}\n\nexport default Preloader","import React from 'react';\nimport '../style/main.scss';\nimport Preloader from './Preloader';\n\nconst RenderUser = ({ isFetching, name, email, phone, position, photo }) => {\n    if(isFetching) {\n        return <Preloader/>\n    }    \n    else {\n        return <>\n            <div className='userCard'>\n                <img src={photo} alt='user_photo'></img>\n                <h2>{name}</h2>\n                <p>{position}</p>\n                <p className='tooltip'>\n                    {email}\n                    <p className='tooltiptext'>{email}</p>\n                </p>\n                <p>{phone}</p>\n            </div>\n        </>\n    }\n}\n\nconst Users = props => {\n    const getUsers = () => {\n        props.updateNextUrl()\n    }\n    const users = props.users.map(user => (\n        <RenderUser\n            isFetching={props.isFetching}\n            name={user.name}\n            email={user.email}\n            phone={user.phone}\n            position={user.position}\n            photo={user.photo}\n        />\n    ))\n\n    return (\n        <div className='users'>\n            <div className='container'>\n                <div className='textBlock'>\n                    <h1>Our cheerful users</h1>\n                    <p>Attention! Sorting users by registration date</p>\n                </div>\n                <div className='usersList'>\n                    {users}\n                </div>\n                <button onClick={getUsers}>Show more</button>\n            </div>\n        </div>\n    )\n}\nexport default Users","export const addUser = (id, name, email, phone, position , position_id, registration_timestamp, photo) => {\n    const newUser = {\n        id: id, \n        name: name, \n        email: email, \n        phone: phone, \n        position: position, \n        position_id: position_id, \n        registration_timestamp: registration_timestamp, \n        photo: photo\n    }\n    return ({newUser: newUser, type: ADD_USER})\n}\nexport const updateNextUrl = (url) => {\n    return ({url: url, type: UPDATE_URL})\n}\nexport const userFetching = (isFetching) => { \n    return ({isFetching, type: USER_IS_FETCHING})\n}\n\nexport const ADD_USER = 'ADD_USER'\nexport const UPDATE_URL = 'UPDATE_URL'\nexport const USER_IS_FETCHING = 'USER_IS_FETCHING'\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Users from './Users'\nimport axios from 'axios';\nimport { addUser, updateNextUrl, userFetching } from '../redux/actions';\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount = () => {\n        this.props.userFetching(true)\n        axios.get(this.props.url).then(response => {\n            this.props.userFetching(false)\n            response.data.users.map(user => this.props.addUser(user.id, user.name, user.email, user.phone,\n                user.position, user.position_id, user.registration_timestamp, user.photo))\n        })\n    }\n\n    updateNextUrl = () => {\n        this.props.userFetching(true)\n        axios.get(this.props.url).then(response => {\n            this.props.userFetching(false)\n            this.props.updateNextUrl(response.data.links.next_url)\n            response.data.users.map(user => this.props.addUser(user.id, user.name, user.email, user.phone,\n                user.position, user.position_id, user.registration_timestamp, user.photo))\n        })\n    }\n\n    render() {\n        return <>\n            <Users\n                updateNextUrl={this.updateNextUrl}\n                users={this.props.users}\n                url={this.props.url}\n                isFetching={this.props.isFetching}\n            />\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.users.users,\n        url: state.users.url,\n        isFetching: state.users.isFetching\n    }\n}\n\nexport default connect(mapStateToProps, { addUser, updateNextUrl, userFetching })(UsersContainer)","import React from 'react'\nimport '../style/main.scss';\n\nconst Acquaintion = props => {\n    return (\n        <div className='container'>\n            <div className='acquaintion'>\n                <h1>Let's get acquainted</h1>\n                <img src={require('../assets/man-laptop-v1.svg')} alt='man with laptop'></img>\n                <div className='textBlock'>\n                    <h2>I am cool frontend developer</h2>\n                    <p>\n                        We will evaluate how clean your approach to writing CSS and Javascript code is.\n                        You can use any CSS and Javascript 3rd party libraries without any restriction.\n                    </p>\n                    <p>\n                        If 3rd party css/javascript libraries are added to the project via bower/npm/yarn you\n                        will get bonus points. If you use any task runner (gulp/webpack) you will get bonus points\n                        as well. Slice service directory page P​SD mockup​ into HTML5/CSS3.\n                    </p>\n                    <a className='flatButton' href='/flatBtn'>Sign up now</a>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Acquaintion","import React from 'react'\nimport '../style/main.scss';\n\nconst Footer = props => {\n    return (\n        <div className='footer'>\n            <p>abz.agency special for the test task</p>\n        </div>\n    )\n}\n\nexport default Footer","import React from 'react'\r\nimport '../style/main.scss';\r\nimport Navbar from './Navbar'\r\nimport Header from './Header'\r\nimport UsersContainer from './UsersContainer'\r\nimport Acquaintion from './Acquaintion'\r\nimport Footer from './Footer'\r\n\r\nconst Home = props => {\r\n    return (\r\n        <>\r\n          <Navbar />\r\n          <Header />\r\n          <Acquaintion />\r\n          <UsersContainer />\r\n          <Footer />\r\n        </>\r\n      )\r\n}\r\n\r\nexport default Home","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport './style/main.scss';\n\nfunction App() {\n  return (\n    <>                        \n      <Route path='/' render={() => <Home />} />\n    </>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ADD_USER, UPDATE_URL, USER_IS_FETCHING } from \"./actions\"\n\nlet initialState = {\n    users: [],\n    url: 'https://frontend-test-assignment-api.abz.agency/api/v1/users?page=1&count=6',\n    isFetching: true,\n}\n\nexport const usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_USER: \n            return {...state, users: [...state.users, action.newUser]}\n        case UPDATE_URL: \n            return {...state, url: action.url}\n        case USER_IS_FETCHING: \n            return {...state, isFetching: action.isFetching}\n        default:\n            return state\n    }\n}\n\nexport default usersReducer","import {combineReducers, createStore} from 'redux';\nimport usersReducer from './usersReducer';\n\nconst reducers = combineReducers({\n    users: usersReducer,\n})\nconst store = createStore(reducers)\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store'\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}